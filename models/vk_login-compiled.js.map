{"version":3,"sources":["vk_login.js"],"names":[],"mappings":"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","file":"vk_login-compiled.js","sourcesContent":["var request = require(\"request\");\nvar htmlparser = require(\"htmlparser2\");\n\n\n\nfunction sendAuthRequest(formAction, inputs, callback){\n    //console.log(\"inputs = \" + JSON.stringify(inputs));\n    //send form with all fields\n    // console.log(\"Sending form\");\n    request({   url: formAction,\n        method: 'POST',\n        form: inputs,\n        jar: true\n    }, function(error, response, body){\n        if(error) {\n            if (callback)\n                callback(error, null, response);\n        } else {\n            //handle vk redirect\n            if (response.statusCode == 302){\n                //console.log(response.headers.location);\n                //go on redirect\n                request({\n                    url: response.headers.location,\n                    jar: true\n                }, function(error, response, body){\n                    if(error) {\n                        if (callback)\n                            callback(error, null, response);\n                    } else {\n                        //console.log(JSON.stringify(response), body);\n                        //find form with access confirmation\n                        var grantAccess = null;\n                        var parser = new htmlparser.Parser({\n                            onopentag: function(name, attribs){\n                                if(name === \"form\"){\n                                    grantAccess = attribs.action;\n                                }\n                            }\n                        });\n                        parser.write(body);\n                        parser.end();\n                        //console.log(\"granter: \" + grantAccess);\n                        //confirm access\n                        request({   url: grantAccess,\n                            jar: true\n                        }, function(error, response, body){\n                            if(error) {\n                                if (callback)\n                                    callback(error, null, response);\n                            } else {\n                                //console.log(JSON.stringify(response), body);\n                                //parse access token\n                                // console.log(response.request.uri.hash);\n                                var token = response.request.uri.hash.split('&')[0].split('=')[1];\n                                //console.log(\"token: \" + token);\n                                if (callback)\n                                    callback(error, token, response);\n                            }\n                        });\n                    }\n                });\n            } else {\n                if (callback)\n                    callback(\"wrong status code!\");\n            }\n            //console.log(JSON.stringify(response), body);\n        }\n    });\n}\n\nfunction accessToken(login, password, callback, appid, scope){\n    var aid = DEFAULT_APP_ID; // default is android\n    if (appid){\n        if (typeof appid === 'string'){\n            if (appid.toLowerCase() === 'android'){\n                aid = APPID_ANDROID;\n            } else if (appid.toLowerCase() === 'ios'){\n                aid = APPID_IOS;\n            } else if (appid.toLowerCase() === 'wp'){\n                aid = APPID_WP;\n            }\n        } else {\n            aid = appid;\n        }\n    }\n    var scopes = 'notify,friends,photos,audio,video,docs,notes,pages,status,offers,questions,wall,groups,messages,notifications,stats,ads,offline'; //Ful scope\n    if (scope){\n        if (Array.isArray(scope)){\n            scopes = scope.join(',');\n        } else {\n            scopes = scope;\n        }\n    }\n    var inputs = {};\n    var formAction = null;\n    var request_link = 'http://oauth.vk.com/oauth/authorize?redirect_uri=http://oauth.vk.com/blank.html&response_type=token&client_id=' + aid + '&scope=' + scopes + '&display=wap';\n    // console.log(\"Auth page\");\n    request({   url: request_link,\n            jar: true\n        },\n        function (error, response, body) {\n            // console.log(\"  in response: \" + error + \" \" + response.statusCode);\n            // console.log(request_link);\n            if (!error && response.statusCode == 200) {\n                var parser = new htmlparser.Parser({\n                    onopentag: function(name, attribs){\n                        if(name === \"form\"){\n                            // console.log(\"forma.action: \"+attribs.action);\n                            formAction = attribs.action;\n                        }\n                        if (name === \"input\"){\n                            if (attribs.type === \"hidden\" || attribs.type === \"text\" || attribs.type === \"password\"){\n                                inputs[attribs.name] = attribs.value || \"\";\n                            }\n                        }\n                    }\n                });\n                parser.write(body); // parse all input fields\n                parser.end();\n                inputs[\"email\"] = login; // change login and password input fields\n                inputs[\"pass\"] = password;\n                sendAuthRequest(formAction, inputs, callback); // make request\n            } else {\n                if (callback)\n                    callback(error, null, response);\n            }\n        }\n    );\n}\n\n\nmodule.exports = {getAccessToken: accessToken};"]}