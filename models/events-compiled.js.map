{"version":3,"sources":["events.js"],"names":[],"mappings":"AAAA;;;AAGA,IAAI,WAAW,QAAQ,SAAR,EAAmB,QAAlC;AACA,IAAI,KAAK,QAAQ,OAAR,CAAT;;AAEA,QAAQ,GAAR,GAAc,UAAU,QAAV,EAAoB;AAC9B,OAAG,GAAH,GAAS,UAAT,CAAoB,YAApB,EAAkC,IAAlC,GAAyC,IAAzC,CAA8C,EAAC,SAAS,CAAV,EAA9C,EAA4D,OAA5D,CAAoE,UAAU,GAAV,EAAe,IAAf,EAAqB;AACrF,iBAAS,GAAT,EAAc,IAAd;AACH,KAFD;AAGH,CAJD;;AAOA,QAAQ,QAAR,GAAmB,UAAU,EAAV,EAAc,QAAd,EAAwB;AACvC,OAAG,GAAH,GAAS,UAAT,CAAoB,YAApB,EAAkC,IAAlC,CAAuC,EAAE,QAAQ,OAAO,EAAP,CAAV,EAAvC,EAA+D,IAA/D,CAAoE,EAAC,SAAS,CAAV,EAApE,EAAkF,OAAlF,CAA0F,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC1G,iBAAS,GAAT,EAAc,GAAd;AACH,KAFD;AAGH,CAJD;;AAOA,QAAQ,MAAR,GAAiB,UAAU,KAAV,EAAiB,QAAjB,EAA2B;AACxC,OAAG,GAAH,GAAS,UAAT,CAAoB,YAApB,EAAkC,MAAlC,CACI,KADJ,EAEI,UAAU,GAAV,EAAe,MAAf,EAAuB;AACnB,iBAAS,GAAT,EAAc,MAAd;AACH,KAJL;AAKH,CAND;;AASA,QAAQ,MAAR,GAAiB,UAAU,EAAV,EAAc,OAAd,EAAuB,QAAvB,EAAiC;AAC9C,OAAG,GAAH,GAAS,UAAT,CAAoB,YAApB,EAAkC,SAAlC,CACI,EAAE,KAAK,SAAS,EAAT,CAAP,EADJ,EAEI,OAFJ,EAGI,UAAU,GAAV,EAAe,MAAf,EAAuB;AACnB,iBAAS,GAAT,EAAc,MAAd;AACH,KALL;AAOH,CARD;;AAYA,QAAQ,MAAR,GAAiB,UAAU,EAAV,EAAc,QAAd,EAAwB;AACrC,OAAG,GAAH,GAAS,UAAT,CAAoB,YAApB,EAAkC,SAAlC,CACI,EAAE,KAAK,SAAS,EAAT,CAAP,EADJ,EAEI,UAAU,GAAV,EAAe,MAAf,EAAuB;AACnB,iBAAS,GAAT,EAAc,MAAd;AACH,KAJL;AAMH,CAPD;;AAUA,QAAQ,YAAR,GAAuB,UAAU,QAAV,EAAoB;AACvC,OAAG,GAAH,GAAS,UAAT,CAAoB,YAApB,EAAkC,IAAlC,CAAuC,EAAvC,EACI,EAAC,IAAG,CAAJ,EADJ,EACY,IADZ,CACiB,EAAC,KAAI,CAAL,EADjB,EAC0B,OAD1B,CACkC,UAAS,GAAT,EAAc;AAC5C,WAAG,GAAH,GAAS,UAAT,CAAoB,YAApB,EAAkC,MAAlC,CAAyC;AACrC,iBAAI,EAAC,KAAI,IAAI,GAAT,EADiC;AAErC,gBAAI,IAAI,EAF6B;AAGrC,kBAAM,IAAI,IAH2B;AAIrC,sBAAU,IAAI,QAJuB;AAKrC,mBAAO,IAAI,KAL0B;AAMrC,mBAAO,IAAI,KAN0B;AAOrC,qBAAS,IAAI,OAPwB;AAQrC,sBAAU,IAAI,QARuB;AASrC,uBAAW,IAAI,SATsB;AAUrC,yBAAa,IAAI;AAVoB,SAAzC;AAYH,KAdD;AAeH,CAhBD","file":"events-compiled.js","sourcesContent":["/**\n * Created by user on 3/28/17.\n */\nvar ObjectID = require('mongodb').ObjectID;\nvar db = require('../db');\n\nexports.all = function (callback) {\n    db.get().collection('cityevents').find().sort({\"start\": 1}).toArray(function (err, docs) {\n        callback(err, docs);\n    })\n};\n\n\nexports.findById = function (id, callback) {\n    db.get().collection('cityevents').find({ cityid: String(id) }).sort({\"start\": 1}).toArray(function (err, doc) {\n        callback(err, doc);\n    })\n};\n\n\nexports.create = function (event, callback) {\n    db.get().collection('cityevents').insert(\n        event,\n        function (err, result) {\n            callback(err, result);\n        })\n};\n\n\nexports.update = function (id, newData, callback) {\n    db.get().collection('cityevents').updateOne(\n        { _id: ObjectID(id) },\n        newData,\n        function (err, result) {\n            callback(err, result);\n        }\n    );\n};\n\n\n\nexports.delete = function (id, callback) {\n    db.get().collection('cityevents').deleteOne(\n        { _id: ObjectID(id) },\n        function (err, result) {\n            callback(err, result);\n        }\n    );\n};\n\n\nexports.deleteDouble = function (callback) {\n    db.get().collection('cityevents').find({},\n        {id:1}).sort({_id:1}).forEach(function(doc) {\n        db.get().collection('cityevents').remove({\n            _id:{$gt:doc._id},\n            id: doc.id,\n            name: doc.name,\n            activity: doc.activity,\n            photo: doc.photo,\n            start: doc.start,\n            members: doc.members,\n            latitude: doc.latitude,\n            longitude: doc.longitude,\n            description: doc.description\n        });\n    })\n};"]}