{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;;;;AASA;AACA,IAAI,mBAAmB,gBAAvB;;AAEA;AACA,IAAI,UAAU,oBAAd;AAAA,IACI,UAAU,mBADd;AAAA,IAEI,SAAS,4BAFb;;AAIA;AACA,IAAI,WAAW,kBAAf;;AAEA;;;;;;;;;AASA,SAAS,SAAT,CAAmB,KAAnB,EAA0B,QAA1B,EAAoC;AAClC,MAAI,QAAQ,CAAC,CAAb;AAAA,MACI,SAAS,QAAQ,MAAM,MAAd,GAAuB,CADpC;;AAGA,SAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,QAAI,SAAS,MAAM,KAAN,CAAT,EAAuB,KAAvB,EAA8B,KAA9B,MAAyC,KAA7C,EAAoD;AAClD;AACD;AACF;AACD,SAAO,KAAP;AACD;;AAED;;;;;;;;;AASA,SAAS,SAAT,CAAmB,CAAnB,EAAsB,QAAtB,EAAgC;AAC9B,MAAI,QAAQ,CAAC,CAAb;AAAA,MACI,SAAS,MAAM,CAAN,CADb;;AAGA,SAAO,EAAE,KAAF,GAAU,CAAjB,EAAoB;AAClB,WAAO,KAAP,IAAgB,SAAS,KAAT,CAAhB;AACD;AACD,SAAO,MAAP;AACD;;AAED;;;;;;;;AAQA,SAAS,OAAT,CAAiB,IAAjB,EAAuB,SAAvB,EAAkC;AAChC,SAAO,UAAS,GAAT,EAAc;AACnB,WAAO,KAAK,UAAU,GAAV,CAAL,CAAP;AACD,GAFD;AAGD;;AAED;AACA,IAAI,cAAc,OAAO,SAAzB;;AAEA;AACA,IAAI,iBAAiB,YAAY,cAAjC;;AAEA;;;;;AAKA,IAAI,iBAAiB,YAAY,QAAjC;;AAEA;AACA,IAAI,uBAAuB,YAAY,oBAAvC;;AAEA;AACA,IAAI,aAAa,QAAQ,OAAO,IAAf,EAAqB,MAArB,CAAjB;;AAEA;;;;;;;;AAQA,SAAS,aAAT,CAAuB,KAAvB,EAA8B,SAA9B,EAAyC;AACvC;AACA;AACA,MAAI,SAAU,QAAQ,KAAR,KAAkB,YAAY,KAAZ,CAAnB,GACT,UAAU,MAAM,MAAhB,EAAwB,MAAxB,CADS,GAET,EAFJ;;AAIA,MAAI,SAAS,OAAO,MAApB;AAAA,MACI,cAAc,CAAC,CAAC,MADpB;;AAGA,OAAK,IAAI,GAAT,IAAgB,KAAhB,EAAuB;AACrB,QAAI,CAAC,aAAa,eAAe,IAAf,CAAoB,KAApB,EAA2B,GAA3B,CAAd,KACA,EAAE,gBAAgB,OAAO,QAAP,IAAmB,QAAQ,GAAR,EAAa,MAAb,CAAnC,CAAF,CADJ,EACiE;AAC/D,aAAO,IAAP,CAAY,GAAZ;AACD;AACF;AACD,SAAO,MAAP;AACD;;AAED;;;;;;;;AAQA,IAAI,WAAW,eAAe,UAAf,CAAf;;AAEA;;;;;;;;;;;AAWA,IAAI,UAAU,eAAd;;AAEA;;;;;;;;AAQA,SAAS,UAAT,CAAoB,MAApB,EAA4B,QAA5B,EAAsC;AACpC,SAAO,UAAU,QAAQ,MAAR,EAAgB,QAAhB,EAA0B,IAA1B,CAAjB;AACD;;AAED;;;;;;;AAOA,SAAS,QAAT,CAAkB,MAAlB,EAA0B;AACxB,MAAI,CAAC,YAAY,MAAZ,CAAL,EAA0B;AACxB,WAAO,WAAW,MAAX,CAAP;AACD;AACD,MAAI,SAAS,EAAb;AACA,OAAK,IAAI,GAAT,IAAgB,OAAO,MAAP,CAAhB,EAAgC;AAC9B,QAAI,eAAe,IAAf,CAAoB,MAApB,EAA4B,GAA5B,KAAoC,OAAO,aAA/C,EAA8D;AAC5D,aAAO,IAAP,CAAY,GAAZ;AACD;AACF;AACD,SAAO,MAAP;AACD;;AAED;;;;;;;;AAQA,SAAS,cAAT,CAAwB,QAAxB,EAAkC,SAAlC,EAA6C;AAC3C,SAAO,UAAS,UAAT,EAAqB,QAArB,EAA+B;AACpC,QAAI,cAAc,IAAlB,EAAwB;AACtB,aAAO,UAAP;AACD;AACD,QAAI,CAAC,YAAY,UAAZ,CAAL,EAA8B;AAC5B,aAAO,SAAS,UAAT,EAAqB,QAArB,CAAP;AACD;AACD,QAAI,SAAS,WAAW,MAAxB;AAAA,QACI,QAAQ,YAAY,MAAZ,GAAqB,CAAC,CADlC;AAAA,QAEI,WAAW,OAAO,UAAP,CAFf;;AAIA,WAAQ,YAAY,OAAZ,GAAsB,EAAE,KAAF,GAAU,MAAxC,EAAiD;AAC/C,UAAI,SAAS,SAAS,KAAT,CAAT,EAA0B,KAA1B,EAAiC,QAAjC,MAA+C,KAAnD,EAA0D;AACxD;AACD;AACF;AACD,WAAO,UAAP;AACD,GAjBD;AAkBD;;AAED;;;;;;;AAOA,SAAS,aAAT,CAAuB,SAAvB,EAAkC;AAChC,SAAO,UAAS,MAAT,EAAiB,QAAjB,EAA2B,QAA3B,EAAqC;AAC1C,QAAI,QAAQ,CAAC,CAAb;AAAA,QACI,WAAW,OAAO,MAAP,CADf;AAAA,QAEI,QAAQ,SAAS,MAAT,CAFZ;AAAA,QAGI,SAAS,MAAM,MAHnB;;AAKA,WAAO,QAAP,EAAiB;AACf,UAAI,MAAM,MAAM,YAAY,MAAZ,GAAqB,EAAE,KAA7B,CAAV;AACA,UAAI,SAAS,SAAS,GAAT,CAAT,EAAwB,GAAxB,EAA6B,QAA7B,MAA2C,KAA/C,EAAsD;AACpD;AACD;AACF;AACD,WAAO,MAAP;AACD,GAbD;AAcD;;AAED;;;;;;;;AAQA,SAAS,OAAT,CAAiB,KAAjB,EAAwB,MAAxB,EAAgC;AAC9B,WAAS,UAAU,IAAV,GAAiB,gBAAjB,GAAoC,MAA7C;AACA,SAAO,CAAC,CAAC,MAAF,KACJ,OAAO,KAAP,IAAgB,QAAhB,IAA4B,SAAS,IAAT,CAAc,KAAd,CADxB,KAEJ,QAAQ,CAAC,CAAT,IAAc,QAAQ,CAAR,IAAa,CAA3B,IAAgC,QAAQ,MAF3C;AAGD;;AAED;;;;;;;AAOA,SAAS,WAAT,CAAqB,KAArB,EAA4B;AAC1B,MAAI,OAAO,SAAS,MAAM,WAA1B;AAAA,MACI,QAAS,OAAO,IAAP,IAAe,UAAf,IAA6B,KAAK,SAAnC,IAAiD,WAD7D;;AAGA,SAAO,UAAU,KAAjB;AACD;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAAS,OAAT,CAAiB,UAAjB,EAA6B,QAA7B,EAAuC;AACrC,MAAI,OAAO,QAAQ,UAAR,IAAsB,SAAtB,GAAkC,QAA7C;AACA,SAAO,KAAK,UAAL,EAAiB,OAAO,QAAP,IAAmB,UAAnB,GAAgC,QAAhC,GAA2C,QAA5D,CAAP;AACD;;AAED;;;;;;;;;;;;;;;;;;AAkBA,SAAS,WAAT,CAAqB,KAArB,EAA4B;AAC1B;AACA,SAAO,kBAAkB,KAAlB,KAA4B,eAAe,IAAf,CAAoB,KAApB,EAA2B,QAA3B,CAA5B,KACJ,CAAC,qBAAqB,IAArB,CAA0B,KAA1B,EAAiC,QAAjC,CAAD,IAA+C,eAAe,IAAf,CAAoB,KAApB,KAA8B,OADzE,CAAP;AAED;;AAED;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAI,UAAU,MAAM,OAApB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAS,WAAT,CAAqB,KAArB,EAA4B;AAC1B,SAAO,SAAS,IAAT,IAAiB,SAAS,MAAM,MAAf,CAAjB,IAA2C,CAAC,WAAW,KAAX,CAAnD;AACD;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAS,iBAAT,CAA2B,KAA3B,EAAkC;AAChC,SAAO,aAAa,KAAb,KAAuB,YAAY,KAAZ,CAA9B;AACD;;AAED;;;;;;;;;;;;;;;;;AAiBA,SAAS,UAAT,CAAoB,KAApB,EAA2B;AACzB;AACA;AACA,MAAI,MAAM,SAAS,KAAT,IAAkB,eAAe,IAAf,CAAoB,KAApB,CAAlB,GAA+C,EAAzD;AACA,SAAO,OAAO,OAAP,IAAkB,OAAO,MAAhC;AACD;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACvB,SAAO,OAAO,KAAP,IAAgB,QAAhB,IACL,QAAQ,CAAC,CADJ,IACS,QAAQ,CAAR,IAAa,CADtB,IAC2B,SAAS,gBAD3C;AAED;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACvB,MAAI,OAAO,OAAO,KAAlB;AACA,SAAO,CAAC,CAAC,KAAF,KAAY,QAAQ,QAAR,IAAoB,QAAQ,UAAxC,CAAP;AACD;;AAED;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAS,YAAT,CAAsB,KAAtB,EAA6B;AAC3B,SAAO,CAAC,CAAC,KAAF,IAAW,OAAO,KAAP,IAAgB,QAAlC;AACD;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAAS,IAAT,CAAc,MAAd,EAAsB;AACpB,SAAO,YAAY,MAAZ,IAAsB,cAAc,MAAd,CAAtB,GAA8C,SAAS,MAAT,CAArD;AACD;;AAED;;;;;;;;;;;;;;;;AAgBA,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACvB,SAAO,KAAP;AACD;;AAED,OAAO,OAAP,GAAiB,OAAjB","file":"index-compiled.js","sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _([1, 2]).forEach(function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, typeof iteratee == 'function' ? iteratee : identity);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = forEach;\n"]}