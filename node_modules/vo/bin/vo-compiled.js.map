{"version":3,"sources":["vo"],"names":[],"mappings":";;AAEA,IAAI,CAAC,iBAAL,EAAwB;;AAEtB;;;;AAIA,MAAI,OAAO,QAAQ,MAAR,CAAX;AACA,MAAI,KAAK,QAAQ,KAAR,CAAT;AACA,MAAI,KAAK,QAAQ,IAAR,CAAT;;AAEA,SAAO,MAAP,GAAgB,EAAhB;;AAEA;;;;AAIA,MAAI,OAAO,QAAQ,IAAR,CAAa,KAAb,CAAmB,CAAnB,CAAX;AACA,MAAI,QAAQ,KAAK,MAAL,CAAY,QAAQ,KAAK,CAAL,MAAY,GAAhC,EAAqC,GAArC,CAAyC,QAAQ,KAAK,OAAL,CAAa,IAAb,CAAjD,CAAZ;AACA,MAAI,OAAO,MAAM,GAAN,CAAU,QAAQ,KAAK,OAAL,CAAa,IAAb,CAAlB,CAAX;AACA,MAAI,YAAY,EAAhB;AACA,MAAI,QAAQ,EAAZ;;AAEA;;;;AAIA,OAAK,GAAL,CAAS,UAAU,GAAV,EAAe;AACtB,cAAU,GAAV,IAAiB,QAAQ,UAAR,CAAmB,GAAnB,CAAjB;AACA,YAAQ,UAAR,CAAmB,GAAnB,IAA0B,UAA1B;AACD,GAHD;;AAKA;;;;AAIA,QAAM,GAAN,CAAU,UAAU,IAAV,EAAgB;AACxB,UAAM,IAAN,IAAc,IAAd;AACA,YAAQ,IAAR;AACD,GAHD;AAID;;AAED;;;;AAIA,SAAS,UAAT,CAAqB,MAArB,EAA6B,IAA7B,EAAmC;AACjC,MAAI,CAAC,MAAM,IAAN,CAAL,EAAkB,OAAO,UAAU,KAAK,OAAL,CAAa,IAAb,CAAV,EAA8B,MAA9B,EAAsC,IAAtC,CAAP;AAClB,MAAI,UAAU,GAAG,YAAH,CAAgB,IAAhB,EAAsB,MAAtB,CAAd;;AAEA;AACA,YAAU,SAAS,OAAT,CAAV;;AAEA;AACA,YAAU,aAAa,OAAb,CAAV;;AAEA;AACA,YAAW;MACP,OAAQ;;;KADZ;;AAMA,SAAO,QAAP,CAAgB,OAAhB,EAAyB,IAAzB;AACD;;AAGD;;;;;;;;;;AAUA,SAAS,QAAT,CAAmB,OAAnB,EAA4B;AAC1B,MAAI,QAAQ,UAAR,CAAmB,CAAnB,MAA0B,MAA9B,EAAsC;AACpC,cAAU,QAAQ,KAAR,CAAc,CAAd,CAAV;AACD;AACD,SAAO,OAAP;AACD;;AAED;;;;;;;;AAQA,SAAS,YAAT,CAAuB,OAAvB,EAAgC;AAC9B,SAAO,QAAQ,OAAR,CAAgB,SAAhB,EAA2B,EAA3B,CAAP;AACD;;AAED;;;;;;AAMA,SAAS,eAAT,GAA4B;AAC1B,SAAO,gBAAgB,QAAQ,UAAR,CAAmB,KAAnB,EAA0B,IAAjD;AACD","file":"vo-compiled.js","sourcesContent":["\n\nif (!already_patched()) {\n\n  /**\n   * Module Dependencies\n   */\n\n  var path = require('path')\n  var vo = require('../')\n  var fs = require('fs')\n\n  global.__vo__ = vo\n\n  /**\n   * Arguments\n   */\n\n  var args = process.argv.slice(2)\n  var files = args.filter(file => file[0] !== '-').map(file => path.resolve(file))\n  var exts = files.map(file => path.extname(file))\n  var originals = {}\n  var patch = {}\n\n  /**\n   * Extnames\n   */\n\n  exts.map(function (ext) {\n    originals[ext] = require.extensions[ext]\n    require.extensions[ext] = vo_runtime\n  })\n\n  /**\n   * Require the file\n   */\n\n  files.map(function (file) {\n    patch[file] = true\n    require(file)\n  })\n}\n\n/**\n *\n */\n\nfunction vo_runtime (module, file) {\n  if (!patch[file]) return originals[path.extname(file)](module, file)\n  var content = fs.readFileSync(file, 'utf8');\n\n  // remove the Byte Order Marker if present\n  content = stripBOM(content);\n\n  // strip away the shebang if present\n  content = stripShebang(content);\n\n  // compile with vo\n  content = `global.__vo__(function * boot () {\n    ${content}\n  })(function (err) {\n    if (err) throw err\n  })`\n\n  module._compile(content, file);\n}\n\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n * because the buffer-to-string conversion in `fs.readFileSync()`\n * translates it to FEFF, the UTF-16 BOM.\n *\n * Copied directly from joyent/node's lib/module.js\n *\n * @api private\n */\n\nfunction stripBOM (content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Strips away the \"shebang\" from the source file if present.\n *\n * Copied directly from joyent/node's lib/module.js\n *\n * @api private\n */\n\nfunction stripShebang (content) {\n  return content.replace(/^\\#\\!.*/, '');\n}\n\n/**\n * Check if require.extensions['.js'] is already patched by gnode\n *\n * @api private\n */\n\nfunction already_patched () {\n  return 'vo_runtime' == require.extensions['.js'].name;\n}\n"]}