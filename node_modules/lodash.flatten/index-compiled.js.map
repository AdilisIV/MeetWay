{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array ? array.length : 0;\n  return length ? baseFlatten(array, 1) : [];\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = flatten;\n"]}