{"version":3,"sources":["start-end-test.js"],"names":[],"mappings":"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","file":"start-end-test-compiled.js","sourcesContent":["'use strict';\n\nvar sinon = require('sinon');\nvar main = require('../package.json').main;\nvar schedule = require('../' + main);\n\nvar clock;\n\nmodule.exports = {\n  setUp: function (cb) {\n    clock = sinon.useFakeTimers();\n    cb();\n  },\n  'RecurrenceRule': {\n    'no endTime , startTime less than now': function (test) {\n      test.expect(3);\n\n      var job = new schedule.Job(function () {\n        test.ok(true);\n      });\n\n      var rule = new schedule.RecurrenceRule();\n      rule.second = null; // every second\n\n      job.schedule({\n        start: new Date(Date.now() - 2000),\n        rule: rule\n      });\n\n      setTimeout(function () {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    'no endTime , startTime greater than now': function (test) {\n      test.expect(1);\n\n      var job = new schedule.Job(function () {\n        test.ok(true);\n      });\n\n      var rule = new schedule.RecurrenceRule();\n      rule.second = null; // every second\n\n      job.schedule({\n        start: new Date(Date.now() + 2000),\n        rule: rule\n      });\n\n      setTimeout(function () {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    'no startTime , endTime less than now': function (test) {\n      test.expect(0);\n\n      var job = new schedule.Job(function () {\n        test.ok(true);\n      });\n\n      var rule = new schedule.RecurrenceRule();\n      rule.second = null; // every second\n\n      job.schedule({\n        end: new Date(Date.now() - 2000),\n        rule: rule\n      });\n\n      setTimeout(function () {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    'no startTime , endTime greater than now': function (test) {\n      test.expect(2);\n\n      var job = new schedule.Job(function () {\n        test.ok(true);\n      });\n\n      var rule = new schedule.RecurrenceRule();\n      rule.second = null; // every second\n\n      job.schedule({\n        end: new Date(Date.now() + 2000),\n        rule: rule\n      });\n\n      setTimeout(function () {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    'has startTime and endTime': function (test) {\n      test.expect(1);\n\n      var job = new schedule.Job(function () {\n        test.ok(true);\n      });\n\n      var rule = new schedule.RecurrenceRule();\n      rule.second = null; // every second\n\n      job.schedule({\n        start: new Date(Date.now() + 1000),\n        end: new Date(Date.now() + 2000),\n        rule: rule\n      });\n\n      setTimeout(function () {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    }\n  },\n  'Object Literal': {\n    'no endTime , startTime less than now': function (test) {\n      test.expect(3);\n\n      var job = new schedule.Job(function () {\n        test.ok(true);\n      });\n\n      job.schedule({\n        start: new Date(Date.now() - 2000),\n        rule: { second: null }\n      });\n\n      setTimeout(function () {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    'no endTime , startTime greater than now': function (test) {\n      test.expect(1);\n\n      var job = new schedule.Job(function () {\n        test.ok(true);\n      });\n\n      job.schedule({\n        start: new Date(Date.now() + 2000),\n        rule: { second: null }\n      });\n\n      setTimeout(function () {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    'no startTime , endTime less than now': function (test) {\n      test.expect(0);\n\n      var job = new schedule.Job(function () {\n        test.ok(true);\n      });\n\n      job.schedule({\n        end: new Date(Date.now() - 2000),\n        rule: { second: null }\n      });\n\n      setTimeout(function () {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    'no startTime , endTime greater than now': function (test) {\n      test.expect(2);\n\n      var job = new schedule.Job(function () {\n        test.ok(true);\n      });\n\n      job.schedule({\n        end: new Date(Date.now() + 2000),\n        rule: { second: null }\n      });\n\n      setTimeout(function () {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    'has startTime and endTime': function (test) {\n      test.expect(1);\n\n      var job = new schedule.Job(function () {\n        test.ok(true);\n      });\n\n      job.schedule({\n        start: new Date(Date.now() + 1000),\n        end: new Date(Date.now() + 2000),\n        rule: { second: null }\n      });\n\n      setTimeout(function () {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    }\n  },\n  'cron-style': {\n    'no endTime , startTime less than now': function (test) {\n      test.expect(3);\n\n      var job = new schedule.Job(function () {\n        test.ok(true);\n      });\n\n      job.schedule({\n        start: new Date(Date.now() - 2000),\n        rule: '*/1 * * * * *'\n      });\n\n      setTimeout(function () {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    'no endTime , startTime greater than now': function (test) {\n      test.expect(1);\n\n      var job = new schedule.Job(function () {\n        test.ok(true);\n      });\n\n      job.schedule({\n        start: new Date(Date.now() + 2000),\n        rule: '*/1 * * * * *'\n      });\n\n      setTimeout(function () {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    'no startTime , endTime less than now': function (test) {\n      test.expect(0);\n\n      var job = new schedule.Job(function () {\n        test.ok(true);\n      });\n\n      job.schedule({\n        end: new Date(Date.now() - 2000),\n        rule: '*/1 * * * * *'\n      });\n\n      setTimeout(function () {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    'no startTime , endTime greater than now': function (test) {\n      test.expect(2);\n\n      var job = new schedule.Job(function () {\n        test.ok(true);\n      });\n\n      job.schedule({\n        end: new Date(Date.now() + 2000),\n        rule: '*/1 * * * * *'\n      });\n\n      setTimeout(function () {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    'has startTime and endTime': function (test) {\n      test.expect(1);\n\n      var job = new schedule.Job(function () {\n        test.ok(true);\n      });\n\n      job.schedule({\n        start: new Date(Date.now() + 1000),\n        end: new Date(Date.now() + 2000),\n        rule: '*/1 * * * * *'\n      });\n\n      setTimeout(function () {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    }\n  },\n  tearDown: function (cb) {\n    clock.restore();\n    cb();\n  }\n};"]}