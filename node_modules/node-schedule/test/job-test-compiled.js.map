{"version":3,"sources":["job-test.js"],"names":[],"mappings":"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","file":"job-test-compiled.js","sourcesContent":["\n'use strict';\n\nvar sinon = require('sinon');\nvar main = require('../package.json').main;\nvar schedule = require('../' + main);\n\nvar es6;\ntry {\n  eval('(function* () {})()');\n  es6 = require('./es6/job-test')(schedule);\n} catch (e) {}\n\nvar clock;\n\nmodule.exports = {\n  setUp: function(cb) {\n    clock = sinon.useFakeTimers();\n    cb();\n  },\n  \"Job constructor\": {\n    \"Accepts Job name and function to run\": function(test) {\n      var job = new schedule.Job('the job', function() {});\n\n      test.equal(job.name, 'the job');\n      test.done();\n    },\n    \"Job name is optional and will be auto-generated\": function(test) {\n      var job = new schedule.Job();\n\n      test.ok(job.name);\n      test.done();\n    },\n    \"Uses unique names across auto-generated Job names\": function(test) {\n      var job1 = new schedule.Job();\n      var job2 = new schedule.Job();\n\n      test.notEqual(job1.name, job2.name);\n      test.done();\n    }\n  },\n  \"#schedule(Date)\": {\n    \"Runs job once at some date\": function(test) {\n      test.expect(1);\n\n      var job = new schedule.Job(function() {\n        test.ok(true);\n      });\n\n      job.schedule(new Date(Date.now() + 3000));\n\n      setTimeout(function() {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    \"Cancel next job before it runs\": function(test) {\n      test.expect(1);\n\n      var job = new schedule.Job(function() {\n        test.ok(true);\n      });\n\n      job.schedule(new Date(Date.now() + 1500));\n      job.schedule(new Date(Date.now() + 3000));\n      job.cancelNext();\n      setTimeout(function() {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    \"Run job on specified date\": function(test) {\n      test.expect(1);\n\n      var job = new schedule.Job(function() {\n        test.ok(true);\n      });\n\n      job.runOnDate(new Date(Date.now() + 3000));\n\n      setTimeout(function() {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    \"Run job in generator\": function(test) {\n      if (!es6) {\n        test.expect(0);\n        test.done();\n        return;\n      }\n\n      es6.jobInGenerator(test);\n\n      clock.tick(3250);\n    },\n    \"Context is passed into generator correctly\": function(test) {\n      if (!es6) {\n        test.expect(0);\n        test.done();\n        return;\n      }\n\n      es6.jobContextInGenerator(test);\n\n      clock.tick(3250);\n    },\n    \"Won't run job if scheduled in the past\": function(test) {\n      test.expect(0);\n\n      var job = new schedule.Job(function() {\n        test.ok(false);\n      });\n\n      job.schedule(new Date(Date.now() - 3000));\n\n      setTimeout(function() {\n        test.done();\n      }, 1000);\n\n      clock.tick(1000);\n    },\n    \"Jobs still run after scheduling a Job in the past\": function(test) {\n      test.expect(1);\n\n      var pastJob = new schedule.Job(function() {\n      // Should not run, blow up if it does\n        test.ok(false);\n      });\n\n      pastJob.schedule(new Date(Date.now() - 3000));\n\n      var job = new schedule.Job(function() {\n        test.ok(true);\n      });\n\n      job.schedule(new Date(Date.now() + 3000));\n\n      setTimeout(function() {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    \"Job emits 'scheduled' event with 'run at' Date\": function(test) {\n      test.expect(1);\n\n      var date = new Date(Date.now() + 3000);\n      var job = new schedule.Job(function() {\n        test.done();\n      });\n\n      job.on('scheduled', function(runAtDate) {\n        test.equal(runAtDate, date);\n      });\n\n      job.schedule(date);\n      clock.tick(3250);\n    }\n  },\n  \"#schedule(Date, fn)\": {\n    \"Runs job once at some date, calls callback when done\": function(test) {\n      test.expect(1);\n\n      var job = new schedule.Job(function() {}, function() {\n        test.ok(true);\n      });\n\n      job.schedule(new Date(Date.now() + 3000));\n\n      setTimeout(function() {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    }\n  },\n  \"#schedule(RecurrenceRule)\": {\n    \"Runs job at interval based on recur rule, repeating indefinitely\": function(test) {\n      test.expect(3);\n\n      var job = new schedule.Job(function() {\n        test.ok(true);\n      });\n\n      var rule = new schedule.RecurrenceRule();\n      rule.second = null; // fire every second\n\n      job.schedule(rule);\n\n      setTimeout(function() {\n        job.cancel();\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    \"Job emits 'scheduled' event for every next invocation\": function(test) {\n        // Job will run 3 times but be scheduled 4 times, 4th run never happens\n        // due to cancel.\n        test.expect(4);\n\n        var job = new schedule.Job(function() {});\n\n        job.on('scheduled', function(runOnDate) {\n          test.ok(true);\n        });\n\n        var rule = new schedule.RecurrenceRule();\n        rule.second = null; // fire every second\n\n        job.schedule(rule);\n\n        setTimeout(function() {\n          job.cancel();\n          test.done();\n        }, 3250);\n\n        clock.tick(3250);\n      },\n      \"Doesn't invoke job if recur rule schedules it in the past\": function(test) {\n        test.expect(0);\n\n        var job = new schedule.Job(function() {\n          test.ok(false);\n        });\n\n        var rule = new schedule.RecurrenceRule();\n        rule.year = 2000;\n\n        job.schedule(rule);\n\n        setTimeout(function() {\n          job.cancel();\n          test.done();\n        }, 1000);\n\n        clock.tick(1000);\n      }\n  },\n  \"#schedule({...})\": {\n    \"Runs job at interval based on object, repeating indefinitely\": function(test) {\n      test.expect(3);\n\n      var job = new schedule.Job(function() {\n        test.ok(true);\n      });\n\n      job.schedule({\n        second: null // fire every second\n      });\n\n      setTimeout(function() {\n        job.cancel();\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    \"Job emits 'scheduled' event for every next invocation\": function(test) {\n        // Job will run 3 times but be scheduled 4 times, 4th run never happens\n        // due to cancel.\n        test.expect(4);\n\n        var job = new schedule.Job(function() {});\n\n        job.on('scheduled', function(runOnDate) {\n          test.ok(true);\n        });\n\n        job.schedule({\n          second: null // Fire every second\n        });\n\n        setTimeout(function() {\n          job.cancel();\n          test.done();\n        }, 3250);\n\n        clock.tick(3250);\n      },\n      \"Doesn't invoke job if object schedules it in the past\": function(test) {\n        test.expect(0);\n\n        var job = new schedule.Job(function() {\n          test.ok(false);\n        });\n\n        job.schedule({\n          year: 2000\n        });\n\n        setTimeout(function() {\n          job.cancel();\n          test.done();\n        }, 1000);\n\n        clock.tick(1000);\n      }\n  },\n  \"#schedule('jobName', {...})\": {\n    \"Runs job with a custom name input\": function(test) {\n      test.expect(3);\n\n      var job = new schedule.Job('jobName', function() {\n        test.equal(job.name, 'jobName');\n      });\n\n      job.schedule({\n        second: null // fire every second\n      });\n\n      setTimeout(function() {\n        job.cancel();\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    }\n  },\n  \"#schedule({...}, {...})\": {\n    \"Runs job and run callback when job is done if callback is provided\": function(test) {\n      test.expect(3);\n\n      var job = new schedule.Job(function() {}, function() {\n        test.ok(true);\n      });\n\n      job.schedule({\n        second: null // fire every second\n      });\n\n      setTimeout(function() {\n        job.cancel();\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    \"Runs job with a custom name input and run callback when job is done\": function(test) {\n      test.expect(3);\n\n      var job = new schedule.Job('MyJob', function() {}, function() {\n        test.equal(job.name, 'MyJob');\n      });\n\n      job.schedule({\n        second: null // fire every second\n      });\n\n      setTimeout(function() {\n        job.cancel();\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    }\n  },\n  \"#cancel\": {\n    \"Prevents all future invocations\": function(test) {\n      test.expect(1);\n\n      var job = new schedule.Job(function() {\n        test.ok(true);\n      });\n\n      job.schedule({\n        second: null // fire every second\n      });\n\n      setTimeout(function() {\n        job.cancel();\n      }, 1250);\n\n      setTimeout(function() {\n        test.done();\n      }, 2250);\n\n      clock.tick(2250);\n    },\n    \"Job emits 'canceled' event\": function(test) {\n      test.expect(1);\n\n      var job = new schedule.Job(function() {});\n\n      job.on('canceled', function() {\n        test.ok(true);\n      });\n\n      job.schedule({\n        second: null // fire every second\n      });\n\n      setTimeout(function() {\n        job.cancel();\n      }, 1250);\n\n      setTimeout(function() {\n        test.done();\n      }, 2250);\n\n      clock.tick(2250);\n    },\n    \"Job is added to scheduledJobs when created and removed when cancelled\": function(test) {\n      test.expect(4);\n\n      var job1 = new schedule.Job('cancelJob', function() {});\n      job1.schedule({\n        second: null // fire every second\n      });\n\n      var job2 = schedule.scheduleJob('second',\n                                      { second: null },\n                                      function() {},\n                                      function() {});\n\n      test.strictEqual(schedule.scheduledJobs.cancelJob, job1);\n      test.strictEqual(schedule.scheduledJobs.second, job2);\n      setTimeout(function() {\n        job1.cancel();\n        job2.cancel();\n        test.strictEqual(schedule.scheduledJobs.cancelJob, undefined);\n        test.strictEqual(schedule.scheduledJobs.second, undefined);\n        test.done();\n      }, 1250);\n\n      clock.tick(1250);\n    }\n  },\n  \"#reschedule\": {\n    \"When rescheduled counter will be reset to zero\": function(test) {\n\n      var job = new schedule.scheduleJob({\n        second: null\n      }, function() {});\n\n      setTimeout(function() {\n        test.equal(job.triggeredJobs(), 3);\n        schedule.rescheduleJob(job, {\n          minute: null\n        });\n      }, 3250);\n\n      setTimeout(function() {\n        job.cancel();\n        test.equal(job.triggeredJobs(), 0);\n        test.done();\n      }, 5000);\n\n      clock.tick(5000);\n    }\n  },\n  \"When invoked\": {\n    \"Job emits 'run' event\": function(test) {\n      test.expect(1);\n\n      var job = new schedule.Job(function() {});\n\n      job.on('run', function() {\n        test.ok(true);\n      });\n\n      job.schedule(new Date(Date.now() + 3000));\n\n      setTimeout(function() {\n        test.done();\n      }, 3250);\n\n      clock.tick(3250);\n    },\n    \"Job counter increase properly\": function(test) {\n      var job = new schedule.Job(function() {});\n\n      job.schedule({\n        second: null // fire every second\n      });\n\n      setTimeout(function() {\n        job.cancel();\n        test.equal(job.triggeredJobs(), 2);\n        test.done();\n      }, 2250);\n\n      clock.tick(2250);\n    }\n  },\n  tearDown: function(cb) {\n    clock.restore();\n    cb();\n  }\n};\n"]}