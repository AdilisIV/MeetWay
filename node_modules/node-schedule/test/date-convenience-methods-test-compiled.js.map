{"version":3,"sources":["date-convenience-methods-test.js"],"names":[],"mappings":";AACA;;AAEA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;AACA,IAAI,OAAO,QAAQ,iBAAR,EAA2B,IAAtC;AACA,IAAI,WAAW,QAAQ,QAAQ,IAAhB,CAAf;;AAEA,IAAI,KAAJ;;AAEA,OAAO,OAAP,GAAiB;AACf,SAAO,UAAS,EAAT,EAAa;AAClB,YAAQ,MAAM,aAAN,EAAR;AACA;AACD,GAJc;AAKf,iBAAe;AACb,yCAAqC,UAAS,IAAT,EAAe;AAClD,WAAK,MAAL,CAAY,CAAZ;;AAEA,eAAS,WAAT,CAAqB,IAAI,IAAJ,CAAS,KAAK,GAAL,KAAa,IAAtB,EAA4B,QAA5B,EAArB,EAA6D,YAAW;AACtE,aAAK,EAAL,CAAQ,IAAR;AACD,OAFD;;AAIA,iBAAW,YAAW;AACpB,aAAK,IAAL;AACD,OAFD,EAEG,IAFH;;AAIA,YAAM,IAAN,CAAW,IAAX;AACD,KAbY;AAcb,sDAAkD,UAAS,IAAT,EAAe;AAC/D,WAAK,MAAL,CAAY,CAAZ;;AAEA,UAAI,MAAM,SAAS,WAAT,CAAqB,SAArB,EAAgC,YAAW,CACpD,CADS,CAAV;;AAGA,WAAK,KAAL,CAAW,GAAX,EAAgB,IAAhB;AACA,WAAK,IAAL;AAED;AAvBY,GALA;AA8Bf,SAAO;AACJ,sDAAkD,UAAS,IAAT,EAAe;AAChE,WAAK,MAAL,CAAY,CAAZ;;AAEA,eAAS,WAAT,CAAqB,IAAI,IAAJ,CAAS,KAAK,GAAL,KAAa,IAAtB,EAA4B,OAA5B,EAArB,EAA4D,YAAW;AACrE,aAAK,EAAL,CAAQ,IAAR;AACD,OAFD;;AAIA,iBAAW,YAAW;AACpB,aAAK,IAAL;AACD,OAFD,EAEG,IAFH;;AAIA,YAAM,IAAN,CAAW,IAAX;AACD;AAbI,GA9BQ;AA6Cf,YAAU,UAAS,EAAT,EAAa;AACrB,UAAM,OAAN;AACA;AACD;AAhDc,CAAjB","file":"date-convenience-methods-test-compiled.js","sourcesContent":["\n'use strict';\n\nvar sinon = require('sinon');\nvar main = require('../package.json').main;\nvar schedule = require('../' + main);\n\nvar clock;\n\nmodule.exports = {\n  setUp: function(cb) {\n    clock = sinon.useFakeTimers();\n    cb();\n  },\n  \"Date string\": {\n    \"Should accept a valid date string\": function(test) {\n      test.expect(1);\n\n      schedule.scheduleJob(new Date(Date.now() + 1000).toString(), function() {\n        test.ok(true);\n      });\n\n      setTimeout(function() {\n        test.done();\n      }, 1250);\n\n      clock.tick(1250);\n    },\n    \"Should not accept invalid string as valid date\": function(test) {\n      test.expect(1);\n\n      var job = schedule.scheduleJob(\"hello!!\", function() {\n      });\n\n      test.equal(job, null);\n      test.done();\n\n    }\n  },\n  \"UTC\": {\n     \"Should accept a valid UTC date in milliseconds\": function(test) {\n      test.expect(1);\n\n      schedule.scheduleJob(new Date(Date.now() + 1000).getTime(), function() {\n        test.ok(true);\n      });\n\n      setTimeout(function() {\n        test.done();\n      }, 1250);\n\n      clock.tick(1250);\n    }\n  },\n  tearDown: function(cb) {\n    clock.restore();\n    cb();\n  }\n};\n"]}