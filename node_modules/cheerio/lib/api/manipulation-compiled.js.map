{"version":3,"sources":["manipulation.js"],"names":[],"mappings":"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","file":"manipulation-compiled.js","sourcesContent":["var parse = require('../parse'),\n    $ = require('../static'),\n    updateDOM = parse.update,\n    evaluate = parse.evaluate,\n    utils = require('../utils'),\n    domEach = utils.domEach,\n    cloneDom = utils.cloneDom,\n    isHtml = utils.isHtml,\n    slice = Array.prototype.slice,\n    _ = {\n      flatten: require('lodash.flatten'),\n      bind: require('lodash.bind'),\n      forEach: require('lodash.foreach')\n    };\n\n// Create an array of nodes, recursing into arrays and parsing strings if\n// necessary\nexports._makeDomArray = function makeDomArray(elem, clone) {\n  if (elem == null) {\n    return [];\n  } else if (elem.cheerio) {\n    return clone ? cloneDom(elem.get(), elem.options) : elem.get();\n  } else if (Array.isArray(elem)) {\n    return _.flatten(elem.map(function(el) {\n      return this._makeDomArray(el, clone);\n    }, this));\n  } else if (typeof elem === 'string') {\n    return evaluate(elem, this.options);\n  } else {\n    return clone ? cloneDom([elem]) : [elem];\n  }\n};\n\nvar _insert = function(concatenator) {\n  return function() {\n    var elems = slice.call(arguments),\n        lastIdx = this.length - 1;\n\n    return domEach(this, function(i, el) {\n      var dom, domSrc;\n\n      if (typeof elems[0] === 'function') {\n        domSrc = elems[0].call(el, i, $.html(el.children));\n      } else {\n        domSrc = elems;\n      }\n\n      dom = this._makeDomArray(domSrc, i < lastIdx);\n      concatenator(dom, el.children, el);\n    });\n  };\n};\n\n/*\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @param {Array} array Target array to splice.\n * @param {Number} spliceIdx Index at which to begin changing the array.\n * @param {Number} spliceCount Number of elements to remove from the array.\n * @param {Array} newElems Elements to insert into the array.\n *\n * @api private\n */\nvar uniqueSplice = function(array, spliceIdx, spliceCount, newElems, parent) {\n  var spliceArgs = [spliceIdx, spliceCount].concat(newElems),\n      prev = array[spliceIdx - 1] || null,\n      next = array[spliceIdx] || null;\n  var idx, len, prevIdx, node, oldParent;\n\n  // Before splicing in new elements, ensure they do not already appear in the\n  // current array.\n  for (idx = 0, len = newElems.length; idx < len; ++idx) {\n    node = newElems[idx];\n    oldParent = node.parent || node.root;\n    prevIdx = oldParent && oldParent.children.indexOf(newElems[idx]);\n\n    if (oldParent && prevIdx > -1) {\n      oldParent.children.splice(prevIdx, 1);\n      if (parent === oldParent && spliceIdx > prevIdx) {\n        spliceArgs[0]--;\n      }\n    }\n\n    node.root = null;\n    node.parent = parent;\n\n    if (node.prev) {\n      node.prev.next = node.next || null;\n    }\n\n    if (node.next) {\n      node.next.prev = node.prev || null;\n    }\n\n    node.prev = newElems[idx - 1] || prev;\n    node.next = newElems[idx + 1] || next;\n  }\n\n  if (prev) {\n    prev.next = newElems[0];\n  }\n  if (next) {\n    next.prev = newElems[newElems.length - 1];\n  }\n  return array.splice.apply(array, spliceArgs);\n};\n\nexports.appendTo = function(target) {\n  if (!target.cheerio) {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target.append(this);\n\n  return this;\n};\n\nexports.prependTo = function(target) {\n  if (!target.cheerio) {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target.prepend(this);\n\n  return this;\n};\n\nexports.append = _insert(function(dom, children, parent) {\n  uniqueSplice(children, children.length, 0, dom, parent);\n});\n\nexports.prepend = _insert(function(dom, children, parent) {\n  uniqueSplice(children, 0, 0, dom, parent);\n});\n\nexports.wrap = function(wrapper) {\n  var wrapperFn = typeof wrapper === 'function' && wrapper,\n      lastIdx = this.length - 1;\n\n  _.forEach(this, _.bind(function(el, i) {\n    var parent = el.parent || el.root,\n        siblings = parent.children,\n        dom, index;\n\n    if (!parent) {\n      return;\n    }\n\n    if (wrapperFn) {\n      wrapper = wrapperFn.call(el, i);\n    }\n\n    if (typeof wrapper === 'string' && !isHtml(wrapper)) {\n      wrapper = this.parents().last().find(wrapper).clone();\n    }\n\n    dom = this._makeDomArray(wrapper, i < lastIdx).slice(0, 1);\n    index = siblings.indexOf(el);\n\n    updateDOM([el], dom[0]);\n    // The previous operation removed the current element from the `siblings`\n    // array, so the `dom` array can be inserted without removing any\n    // additional elements.\n    uniqueSplice(siblings, index, 0, dom, parent);\n  }, this));\n\n  return this;\n};\n\nexports.after = function() {\n  var elems = slice.call(arguments),\n      lastIdx = this.length - 1;\n\n  domEach(this, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el),\n        domSrc, dom;\n\n    // If not found, move on\n    if (index < 0) return;\n\n    if (typeof elems[0] === 'function') {\n      domSrc = elems[0].call(el, i, $.html(el.children));\n    } else {\n      domSrc = elems;\n    }\n    dom = this._makeDomArray(domSrc, i < lastIdx);\n\n    // Add element after `this` element\n    uniqueSplice(siblings, index + 1, 0, dom, parent);\n  });\n\n  return this;\n};\n\nexports.insertAfter = function(target) {\n  var clones = [],\n      self = this;\n  if (typeof target === 'string') {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n  target = this._makeDomArray(target);\n  self.remove();\n  domEach(target, function(i, el) {\n    var clonedSelf = self._makeDomArray(self.clone());\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n\n    // If not found, move on\n    if (index < 0) return;\n\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n    clones.push(clonedSelf);\n  });\n  return this.constructor.call(this.constructor, this._makeDomArray(clones));\n};\n\nexports.before = function() {\n  var elems = slice.call(arguments),\n      lastIdx = this.length - 1;\n\n  domEach(this, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el),\n        domSrc, dom;\n\n    // If not found, move on\n    if (index < 0) return;\n\n    if (typeof elems[0] === 'function') {\n      domSrc = elems[0].call(el, i, $.html(el.children));\n    } else {\n      domSrc = elems;\n    }\n\n    dom = this._makeDomArray(domSrc, i < lastIdx);\n\n    // Add element before `el` element\n    uniqueSplice(siblings, index, 0, dom, parent);\n  });\n\n  return this;\n};\n\nexports.insertBefore = function(target) {\n  var clones = [],\n      self = this;\n  if (typeof target === 'string') {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n  target = this._makeDomArray(target);\n  self.remove();\n  domEach(target, function(i, el) {\n    var clonedSelf = self._makeDomArray(self.clone());\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n\n    // If not found, move on\n    if (index < 0) return;\n\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index, 0, clonedSelf, parent);\n    clones.push(clonedSelf);\n  });\n  return this.constructor.call(this.constructor, this._makeDomArray(clones));\n};\n\n/*\n  remove([selector])\n*/\nexports.remove = function(selector) {\n  var elems = this;\n\n  // Filter if we have selector\n  if (selector)\n    elems = elems.filter(selector);\n\n  domEach(elems, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n\n    if (index < 0) return;\n\n    siblings.splice(index, 1);\n    if (el.prev) {\n      el.prev.next = el.next;\n    }\n    if (el.next) {\n      el.next.prev = el.prev;\n    }\n    el.prev = el.next = el.parent = el.root = null;\n  });\n\n  return this;\n};\n\nexports.replaceWith = function(content) {\n  var self = this;\n\n  domEach(this, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        dom = self._makeDomArray(typeof content === 'function' ? content.call(el, i, el) : content),\n        index;\n\n    // In the case that `dom` contains nodes that already exist in other\n    // structures, ensure those nodes are properly removed.\n    updateDOM(dom, null);\n\n    index = siblings.indexOf(el);\n\n    // Completely remove old element\n    uniqueSplice(siblings, index, 1, dom, parent);\n    el.parent = el.prev = el.next = el.root = null;\n  });\n\n  return this;\n};\n\nexports.empty = function() {\n  domEach(this, function(i, el) {\n    _.forEach(el.children, function(el) {\n      el.next = el.prev = el.parent = null;\n    });\n\n    el.children.length = 0;\n  });\n  return this;\n};\n\n/**\n * Set/Get the HTML\n */\nexports.html = function(str) {\n  if (str === undefined) {\n    if (!this[0] || !this[0].children) return null;\n    return $.html(this[0].children, this.options);\n  }\n\n  var opts = this.options;\n\n  domEach(this, function(i, el) {\n    _.forEach(el.children, function(el) {\n      el.next = el.prev = el.parent = null;\n    });\n\n    var content = str.cheerio ? str.clone().get() : evaluate('' + str, opts);\n\n    updateDOM(content, el);\n  });\n\n  return this;\n};\n\nexports.toString = function() {\n  return $.html(this, this.options);\n};\n\nexports.text = function(str) {\n  // If `str` is undefined, act as a \"getter\"\n  if (str === undefined) {\n    return $.text(this);\n  } else if (typeof str === 'function') {\n    // Function support\n    return domEach(this, function(i, el) {\n      var $el = [el];\n      return exports.text.call($el, str.call(el, i, $.text($el)));\n    });\n  }\n\n  // Append text node to each selected elements\n  domEach(this, function(i, el) {\n    _.forEach(el.children, function(el) {\n      el.next = el.prev = el.parent = null;\n    });\n\n    var elem = {\n      data: '' + str,\n      type: 'text',\n      parent: el,\n      prev: null,\n      next: null,\n      children: []\n    };\n\n    updateDOM(elem, el);\n  });\n\n  return this;\n};\n\nexports.clone = function() {\n  return this._make(cloneDom(this.get(), this.options));\n};\n"]}