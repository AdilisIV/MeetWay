{"version":3,"sources":["expression.js"],"names":[],"mappings":"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","file":"expression-compiled.js","sourcesContent":["var util = require('util');\nvar test = require('tap').test;\nvar CronExpression = require('../lib/expression');\n\ntest('empty expression test', function(t) {\n  CronExpression.parse('', function(err, interval) {\n    t.ifError(err, 'Interval parse error');\n    t.ok(interval, 'Interval parsed');\n\n    var date = new Date();\n    date.addMinute();\n\n    var next = interval.next();\n\n    t.ok(next, 'Found next scheduled interval');\n    t.equal(next.getMinutes(), date.getMinutes(), 'Schedule matches');\n\n    t.end();\n  });\n});\n\ntest('default expression test', function(t) {\n  CronExpression.parse('* * * * *', function(err, interval) {\n    t.ifError(err, 'Interval parse error');\n    t.ok(interval, 'Interval parsed');\n\n    var date = new Date();\n    date.addMinute();\n\n    var next = interval.next();\n\n    t.ok(next, 'Found next scheduled interval');\n    t.equal(next.getMinutes(), date.getMinutes(), 'Schedule matches');\n\n    t.end();\n  });\n});\n\ntest('default expression test (sync)', function(t) {\n  var interval = CronExpression.parseSync('* * * * *');\n  t.ok(interval, 'Interval parsed');\n\n  var date = new Date();\n  date.addMinute();\n\n  var next = interval.next();\n\n  t.ok(next, 'Found next scheduled interval');\n  t.equal(next.getMinutes(), date.getMinutes(), 'Schedule matches');\n\n  t.end();\n});\n\ntest('second value out of the range', function(t) {\n  CronExpression.parse('61 * * * * *', function(err, interval) {\n    t.ok(err, 'Error expected');\n    t.equal(interval, undefined, 'No interval iterator expected');\n\n    t.end();\n  });\n});\n\ntest('second value out of the range', function(t) {\n  CronExpression.parse('-1 * * * * *', function(err, interval) {\n    console.log('Error', err);\n    t.ok(err, 'Error expected');\n    t.equal(interval, undefined, 'No interval iterator expected');\n\n    t.end();\n  });\n});\n\ntest('minute value out of the range', function(t) {\n  CronExpression.parse('* 32,72 * * * *', function(err, interval) {\n    t.ok(err, 'Error expected');\n    t.equal(interval, undefined, 'No interval iterator expected');\n\n    t.end();\n  });\n});\n\ntest('hour value out of the range', function(t) {\n  CronExpression.parse('* * 12-36 * * *', function(err, interval) {\n    t.ok(err, 'Error expected');\n    t.equal(interval, undefined, 'No interval iterator expected');\n\n    t.end();\n  });\n});\n\ntest('day of the month value out of the range', function(t) {\n  CronExpression.parse('* * * 10-15,40 * *', function(err, interval) {\n    t.ok(err, 'Error expected');\n    t.equal(interval, undefined, 'No interval iterator expected');\n\n    t.end();\n  });\n});\n\ntest('month value out of the range', function(t) {\n  CronExpression.parse('* * * * */10,12-13 *', function(err, interval) {\n    t.ok(err, 'Error expected');\n    t.equal(interval, undefined, 'No interval iterator expected');\n\n    t.end();\n  });\n});\n\ntest('day of the week value out of the range', function(t) {\n  CronExpression.parse('* * * * * 9', function(err, interval) {\n    t.ok(err, 'Error expected');\n    t.equal(interval, undefined, 'No interval iterator expected');\n\n    t.end();\n  });\n});\n\ntest('incremental minutes expression test', function(t) {\n  CronExpression.parse('*/3 * * * *', function(err, interval) {\n    t.ifError(err, 'Interval parse error');\n    t.ok(interval, 'Interval parsed');\n\n    var next = interval.next();\n\n    t.ok(next, 'Found next scheduled interval');\n    t.equal(next.getMinutes() % 3, 0, 'Schedule matches');\n\n    t.end();\n  });\n});\n\ntest('fixed expression test', function(t) {\n  CronExpression.parse('10 2 12 8 0', function(err, interval) {\n    t.ifError(err, 'Interval parse error');\n    t.ok(interval, 'Interval parsed');\n\n    var next = interval.next();\n\n    t.ok(next, 'Found next scheduled interval');\n    t.equal(next.getDay(), 0, 'Day matches');\n    t.equal(next.getMonth(), 7, 'Month matches');\n    t.equal(next.getDate(), 12, 'Day of month matches');\n    t.equal(next.getHours(), 2, 'Hour matches');\n    t.equal(next.getMinutes(), 10, 'Minute matches');\n\n    t.end();\n  });\n});\n\ntest('invalid characters test - symbol', function(t) {\n  CronExpression.parse('10 ! 12 8 0', function(err, interval) {\n    t.ok(err, 'Error expected');\n    t.equal(interval, undefined, 'Invalid characters, got value: !');\n\n    t.end();\n  });\n});\n\ntest('invalid characters test - letter', function(t) {\n  CronExpression.parse('10 x 12 8 0', function(err, interval) {\n    t.ok(err, 'Error expected');\n    t.equal(interval, undefined, 'Invalid characters, got value: x');\n\n    t.end();\n  });\n});\n\ntest('invalid characters test - parentheses', function(t) {\n  CronExpression.parse('10 ) 12 8 0', function(err, interval) {\n    t.ok(err, 'Error expected');\n    t.equal(interval, undefined, 'Invalid characters, got value: )');\n\n    t.end();\n  });\n});\n\ntest('interval with invalid characters test', function(t) {\n  CronExpression.parse('10 */A 12 8 0', function(err, interval) {\n    t.ok(err, 'Error expected');\n    t.equal(interval, undefined, 'Invalid characters, got value: */A');\n\n    t.end();\n  });\n});\n\ntest('range with invalid characters test', function(t) {\n  CronExpression.parse('10 0-z 12 8 0', function(err, interval) {\n    t.ok(err, 'Error expected');\n    t.equal(interval, undefined, 'Invalid characters, got value: 0-z');\n\n    t.end();\n  });\n});\n\ntest('group with invalid characters test', function(t) {\n  CronExpression.parse('10 0,1,z 12 8 0', function(err, interval) {\n    t.ok(err, 'Error expected');\n    t.equal(interval, undefined, 'Invalid characters, got value: 0,1,z');\n\n    t.end();\n  });\n});\n\ntest('range test with iterator', function(t) {\n  CronExpression.parse('10-30 2 12 8 0', function(err, interval) {\n    t.ifError(err, 'Interval parse error');\n    t.ok(interval, 'Interval parsed');\n\n    var intervals = interval.iterate(20);\n    t.ok(intervals, 'Found intervals');\n\n    for (var i = 0, c = intervals.length; i < c; i++) {\n      var next = intervals[i];\n\n      t.ok(next, 'Found next scheduled interval');\n      t.equal(next.getDay(), 0, 'Day matches');\n      t.equal(next.getMonth(), 7, 'Month matches');\n      t.equal(next.getDate(), 12, 'Day of month matches');\n      t.equal(next.getHours(), 2, 'Hour matches');\n      t.equal(next.getMinutes(), 10 + i, 'Minute matches');\n    }\n\n    t.end();\n  });\n});\n\ntest('incremental range test with iterator', function(t) {\n  CronExpression.parse('10-30/2 2 12 8 0', function(err, interval) {\n    t.ifError(err, 'Interval parse error');\n    t.ok(interval, 'Interval parsed');\n\n    var intervals = interval.iterate(10);\n    t.ok(intervals, 'Found intervals');\n\n    for (var i = 0, c = intervals.length; i < c; i++) {\n      var next = intervals[i];\n\n      t.ok(next, 'Found next scheduled interval');\n      t.equal(next.getDay(), 0, 'Day matches');\n      t.equal(next.getMonth(), 7, 'Month matches');\n      t.equal(next.getDate(), 12, 'Day of month matches');\n      t.equal(next.getHours(), 2, 'Hour matches');\n      t.equal(next.getMinutes(), 10 + (i * 2), 'Minute matches');\n    }\n\n    t.end();\n  });\n});\n\ntest('predefined expression', function(t) {\n  CronExpression.parse('@yearly', function(err, interval) {\n    t.ifError(err, 'Interval parse error');\n    t.ok(interval, 'Interval parsed');\n\n    var date = new Date();\n    date.addYear();\n\n    var next = interval.next();\n    t.ok(next, 'Found next scheduled interval');\n\n    t.equal(next.getFullYear(), date.getFullYear(), 'Year matches');\n    t.end();\n  });\n});\n\ntest('expression limited with start and end date', function(t) {\n  var options = {\n    currentDate: new Date('Wed, 26 Dec 2012 14:38:53'),\n    endDate: new Date('Wed, 26 Dec 2012 16:40:00')\n  };\n\n  CronExpression.parse('*/20 * * * *', options, function(err, interval) {\n    t.ifError(err, 'Interval parse error');\n    t.ok(interval, 'Interval parsed');\n\n    var dates = interval.iterate(10);\n    t.equal(dates.length, 7, 'Dates count matches');\n\n    interval.reset(); // Reset\n\n    var next = interval.next();\n    t.equal(next.getHours(), 14, 'Hour matches');\n    t.equal(next.getMinutes(), 40, 'Minute matches');\n\n    next = interval.next();\n    t.equal(next.getHours(), 15, 'Hour matches');\n    t.equal(next.getMinutes(), 0, 'Minute matches');\n\n    next = interval.next();\n    t.equal(next.getHours(), 15, 'Hour matches');\n    t.equal(next.getMinutes(), 20, 'Minute matches');\n\n    next = interval.next();\n    t.equal(next.getHours(), 15, 'Hour matches');\n    t.equal(next.getMinutes(), 40, 'Minute matches');\n\n    next = interval.next();\n    t.equal(next.getHours(), 16, 'Hour matches');\n    t.equal(next.getMinutes(), 0, 'Minute matches');\n\n    next = interval.next();\n    t.equal(next.getHours(), 16, 'Hour matches');\n    t.equal(next.getMinutes(), 20, 'Minute matches');\n\n    next = interval.next();\n    t.equal(next.getHours(), 16, 'Hour matches');\n    t.equal(next.getMinutes(), 40, 'Minute matches');\n\n    try {\n      next = interval.next();\n      t.ok(false, 'Should fail');\n    } catch (e) {\n      t.ok(true, 'Failed as expected');\n    }\n\n    t.end();\n  });\n});\n\ntest('expression using days of week strings', function(t) {\n  CronExpression.parse('15 10 * * MON-TUE', function(err, interval) {\n    t.ifError(err, 'Interval parse error');\n    t.ok(interval, 'Interval parsed');\n\n    var intervals = interval.iterate(8);\n    t.ok(intervals, 'Found intervals');\n\n    for (var i = 0, c = intervals.length; i < c; i++) {\n      var next = intervals[i];\n      var day = next.getDay();\n\n      t.ok(next, 'Found next scheduled interval');\n      t.ok(day == 1 || day == 2, \"Day matches\")\n      t.equal(next.getHours(), 10, 'Hour matches');\n      t.equal(next.getMinutes(), 15, 'Minute matches');\n    }\n\n    t.end();\n  });\n});\n\ntest('expression using mixed days of week strings', function(t) {\n  CronExpression.parse('15 10 * jAn-FeB mOn-tUE', function(err, interval) {\n    t.ifError(err, 'Interval parse error');\n    t.ok(interval, 'Interval parsed');\n\n    var intervals = interval.iterate(8);\n    t.ok(intervals, 'Found intervals');\n\n    for (var i = 0, c = intervals.length; i < c; i++) {\n      var next = intervals[i];\n      var day = next.getDay();\n      var month = next.getMonth();\n\n      t.ok(next, 'Found next scheduled interval');\n      t.ok(month == 0 || month == 2, \"Month Matches\");\n      t.ok(day == 1 || day == 2, \"Day matches\");\n      t.equal(next.getHours(), 10, 'Hour matches');\n      t.equal(next.getMinutes(), 15, 'Minute matches');\n    }\n\n    t.end();\n  });\n});\n\n\n"]}