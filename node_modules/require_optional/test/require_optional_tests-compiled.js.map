{"version":3,"sources":["require_optional_tests.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;AAAA,IACE,mBAAmB,QAAQ,KAAR,CADrB;AAAA,IAEE,aAAa,QAAQ,cAAR,CAFf;;AAIA,SAAS,kBAAT,EAA6B,YAAW;AACtC,WAAS,mBAAT,EAA8B,YAAW;AACvC,OAAG,qCAAH,EAA0C,YAAW;AACnD,UAAI,UAAU,iBAAiB,aAAjB,CAAd;AACA,aAAO,EAAP,CAAU,OAAV;AACD,KAHD;;AAKA,OAAG,4CAAH,EAAiD,YAAW;AAC1D,UAAI;AACF,yBAAiB,IAAjB;AACD,OAFD,CAEE,OAAM,CAAN,EAAS;AACT,eAAO,KAAP,CAAa,2BAAb,EAA0C,EAAE,IAA5C;AACA;AACD;;AAED,aAAO,EAAP,CAAU,KAAV;AACD,KATD;;AAWA,OAAG,4CAAH,EAAiD,YAAW;AAC1D,aAAO,KAAP,CAAa,SAAb,EAAwB,iBAAiB,cAAjB,CAAxB;AACD,KAFD;AAGD,GApBD;;AAsBA,WAAS,8BAAT,EAAyC,YAAW;AAClD,OAAG,qCAAH,EAA0C,YAAW;AACnD,UAAI,OAAO,iBAAiB,uBAAjB,CAAX;AACA,aAAO,EAAP,CAAU,IAAV;AACD,KAHD;AAID,GALD;;AAOA,WAAS,mBAAT,EAA8B,YAAW;AACvC,OAAG,oCAAH,EAAyC,YAAW;AAClD,aAAO,KAAP,CAAa,KAAb,EAAoB,iBAAiB,MAAjB,CAAwB,IAAxB,CAApB;AACA,aAAO,KAAP,CAAa,IAAb,EAAmB,iBAAiB,MAAjB,CAAwB,aAAxB,CAAnB;AACA,aAAO,KAAP,CAAa,IAAb,EAAmB,iBAAiB,MAAjB,CAAwB,uBAAxB,CAAnB;AACA,aAAO,KAAP,CAAa,KAAb,EAAoB,iBAAiB,MAAjB,CAAwB,cAAxB,CAApB;AACD,KALD;AAMD,GAPD;;AASA,WAAS,sCAAT,EAAiD,YAAW;AAC1D,OAAG,mFAAH,EAAwF,YAAW;AACjG,aAAO,EAAP,CAAU,WAAW,WAAX,CAAuB,MAAvB,CAAV;AACD,KAFD;AAGA,OAAG,0FAAH,EAA+F,YAAW;AACxG,aAAO,KAAP,CAAa,IAAb,EAAmB,WAAW,WAAX,CAAuB,cAAvB,CAAnB;AACD,KAFD;AAGA,OAAG,yGAAH,EAA8G,YAAW;AACvH,UAAI;AACF,mBAAW,WAAX,CAAuB,OAAvB;AACD,OAFD,CAEE,OAAO,GAAP,EAAY;AACZ,eAAO,KAAP,CAAa,IAAI,OAAjB,EAA0B,wFAA1B;AACD;AACF,KAND;AAOD,GAdD;AAeD,CAtDD","file":"require_optional_tests-compiled.js","sourcesContent":["var assert = require('assert'),\n  require_optional = require('../'),\n  nestedTest = require('./nestedTest');\n\ndescribe('Require Optional', function() {\n  describe('top level require', function() {\n    it('should correctly require co library', function() {\n      var promise = require_optional('es6-promise');\n      assert.ok(promise);\n    });\n\n    it('should fail to require es6-promise library', function() {\n      try {\n        require_optional('co');\n      } catch(e) {\n        assert.equal('OPTIONAL_MODULE_NOT_FOUND', e.code);\n        return;\n      }\n\n      assert.ok(false);\n    });\n\n    it('should ignore optional library not defined', function() {\n      assert.equal(undefined, require_optional('es6-promise2'));\n    });\n  });\n\n  describe('internal module file require', function() {\n    it('should correctly require co library', function() {\n      var Long = require_optional('bson/lib/bson/long.js');\n      assert.ok(Long);\n    });\n  });\n\n  describe('top level resolve', function() {\n    it('should correctly use exists method', function() {\n      assert.equal(false, require_optional.exists('co'));\n      assert.equal(true, require_optional.exists('es6-promise'));\n      assert.equal(true, require_optional.exists('bson/lib/bson/long.js'));\n      assert.equal(false, require_optional.exists('es6-promise2'));\n    });\n  });\n\n  describe('require_optional inside dependencies', function() {\n    it('should correctly walk up module call stack searching for peerOptionalDependencies', function() {\n      assert.ok(nestedTest.findPackage('bson'))\n    });\n    it('should return null when a package is defined in top-level package.json but not installed', function() {\n      assert.equal(null, nestedTest.findPackage('es6-promise2'))\n    });\n    it('should error when searching for an optional dependency that is not defined in any ancestor package.json', function() {\n      try {\n        nestedTest.findPackage('bison')\n      } catch (err) {\n        assert.equal(err.message, 'no optional dependency [bison] defined in peerOptionalDependencies in any package.json')\n      }\n    })\n  });\n});\n"]}