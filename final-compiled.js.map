{"version":3,"sources":["final.js"],"names":[],"mappings":"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","file":"final-compiled.js","sourcesContent":["var express = require('express');\nvar bodyParser = require('body-parser');\nvar MongoClient = require('mongodb').MongoClient;\nvar ObjectID = require('mongodb').ObjectID;\nvar db = require('./db');\nvar eventsController = require('./controllers/events');\nvar path = require('path');\nvar request = require('request');\nvar cheerio = require('cheerio');\nvar fs = require('fs');\nvar encoding = require('encoding');\nvar app = express();\nconst VK = require('vk-io');\nconst vk = new VK({\n    app: 5980502,\n    login: 'ilia.fyodoroff@mail.ru',\n    pass: 'zxcfghb12QLNkftMGS44078',\n    phone: '+79220291925',\n    scope: 'stats,notifications,groups,wall,pages,friends,offline,photos,market'\n});\nvar jquery = require('jquery');\nvar Nightmare = require('nightmare');\nnightmare = Nightmare({ show: true, dock: true });\nvar schedule = require('node-schedule');\nvar rule = new schedule.RecurrenceRule();\nrule.hour = new schedule.Range(0, 59, 12);\n\n//var ABC = [\"в\",\"с\",\"до\",\"от\",\"2017\",\"по\",\"на\",\"за\",\"для\",\"фестиваль\",\"день\",\"уроки\",\"встреча\",\"отдых\",\"МК\"];\nvar groupID = [];\nvar groupName = [];\nvar groupActivity = [];\nvar groupMembers = [];\nvar groupPhoto = [];\nvar groupStartdate= [];\nvar groupLatitude = [];\nvar groupLongitude = [];\nvar eventsArr = [];\n\nvar CitiesID = ['96'];\nvar ABC = [\"в\", \"c\"];\n\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\nconst auth = vk.auth.standalone();\n\n\nfunction arrayUnique(arr){\n    return arr.filter((e,i,a)=>a.indexOf(e)==i)\n}\nfunction compareStart(eventA, eventB) {\n    return eventA.start - eventB.start;\n}\nfunction cleaningGlobalValues() {\n    groupID.length = 0;\n    groupName.length = 0;\n    groupActivity.length = 0;\n    groupMembers.length = 0;\n    groupPhoto.length = 0;\n    groupStartdate.length = 0;\n    groupLatitude.length = 0;\n    groupLongitude.length = 0;\n    eventsArr.length = 0;\n}\n\nfunction parseDataFromSite(c) {\n    return function () {\n        nightmare.goto('https://vk.com/search?c%5Bcity%5D=' + CitiesID[c] + '&c%5Bcountry%5D=1&c%5Bsection%5D=communities&c%5Bskip_catalog%5D=1&c%5Btype%5D=3')\n            .wait(2000)\n            .inject('js', './jquery_v1_10_2.js')\n            .wait(3000)\n            .inject('js', './scrollAnimate.js')\n            .wait(15000)\n            .evaluate(function () {\n                var shortNames = [];\n                $('.labeled.title a').each(function () {\n                    var item = $(this).attr('href');\n                    $.trim(item);\n                    item = item.replace('/','');\n                    item = item.replace('event','club');\n                    shortNames.push(item)\n                });\n\n                shortNames = shortNames.join(',');\n\n                return new Promise(function (resolve, reject) {\n                    setTimeout(() => resolve(shortNames), 1000);\n                })\n            })\n            .then(function (result) {\n                return new Promise(function (resolve, reject) {\n                    console.info(result);\n                    vk.api.groups.getById({\n                            group_ids: result,\n                            fields: 'members_count,start_date,activity,place'\n                        })\n                        .then((data) => {\n                            console.log(data);\n\n                            /*var Event = {\n                                id: String,\n                                name: String,\n                                activity: String,\n                                photo: String,\n                                start: Number,\n                                members: Number,\n                                latitude: Number,\n                                longitude: Number\n                            };*/\n\n                            var id = [];\n                            var name = [];\n                            var activity = [];\n                            var photo = [];\n                            var start = [];\n                            var members = [];\n                            var latitude = [];\n                            var longitude = [];\n\n                            var gLatitude = 0;\n                            var gLongitude = 0;\n                            var gMembers = 0;\n                            var gActivity = \"Данные недоступны\";\n                            var gStartDate = 2001513200;\n\n\n                            var dataObj = JSON.stringify(data);\n                            var dataJSON = JSON.parse(dataObj);\n\n                            for (var i = 0; i < dataJSON.length; i++) {\n                                \n                                var place = dataJSON[i].place;\n                                if (place) {\n                                    gLatitude = dataJSON[i].place.latitude;\n                                    gLongitude = dataJSON[i].place.longitude;\n                                } else {\n                                    console.info('Адрес проведения мероприятий не указан организаторами');\n                                }\n\n                                if (dataJSON[i].is_closed == 0) {\n                                    gActivity = dataJSON[i].activity;\n                                    gMembers = dataJSON[i].members_count;\n                                    gStartDate = dataJSON[i].start_date;\n                                } else {\n                                    console.info('Частное сообщество');\n                                }\n\n                                id.push(dataJSON[i].id);\n                                name.push(dataJSON[i].name);\n                                activity.push(gActivity);\n                                photo.push(dataJSON[i].photo_200);\n                                start.push(gStartDate);\n                                members.push(gMembers);\n                                latitude.push(gLatitude);\n                                longitude.push(gLongitude);\n\n                            }\n\n                            console.log(\"Длинна массива с members: \", id.length);\n                            console.log(\"Длинна массива с members: \", name.length);\n                            console.log(\"Длинна массива с members: \", activity.length);\n                            console.log(\"Длинна массива с members: \", photo.length);\n                            console.log(\"Длинна массива с members: \", start.length);\n                            console.log(\"Длинна массива с members: \", members.length);\n                            console.log(\"Длинна массива с members: \", latitude.length);\n                            console.log(\"Длинна массива с members: \", longitude.length);\n\n                            for (var l=0; l<id.length; l++) {\n                                request.post({\n                                    url: 'http://localhost:1337/events/'+CitiesID[c],\n                                    form: {\n                                        id: id[l],\n                                        name: name[l],\n                                        activity: activity[l],\n                                        photo: photo[l],\n                                        start: start[l],\n                                        members: members[l],\n                                        latitude: latitude[l],\n                                        longitude: longitude[l]\n                                    }\n                                }, function (err, res, body) {\n                                    if (err) {\n                                        console.log(err);\n                                    } else if (body) {\n                                        console.log(body);\n                                    }\n                                });\n                            }\n\n                            //resolve(eventsArr);\n                        })\n                })\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }\n}\n\nfunction parseDataViaAPI(j,c) {\n    return function () {\n        //.then(function () {\n        auth.run()\n            .then((token) => {\n                console.log('User token:', token);\n                vk.setToken(token);\n                vk.api.groups.search({\n                        q: ABC[j], // j\n                        type: 'event',\n                        city_id: CitiesID[c], // c\n                        future: 1,\n                        offset: 0,\n                        count: 1000\n                    })\n                    .then((group) => {\n                        var result = [];\n                        console.log('Первое поиское слово: ', ABC[j]); // j\n                        var groupObj = JSON.stringify(group);\n                        var groupJSON = JSON.parse(groupObj);\n                        for (var i = 0; i < groupJSON.items.length; i++) {\n                            result.push(groupJSON.items[i].screen_name); // все id по словарю для заданного города\n                        }\n                        result = arrayUnique(result); // удаляем дублирующиеся данные\n                        return result;\n                    })\n                    .then(function (result) {\n                        return new Promise(function (resolve, reject) {\n                            console.info(result);\n                            vk.api.groups.getById({\n                                    group_ids: result,\n                                    fields: 'members_count,start_date,activity,place'\n                                })\n                                .then((data) => {\n                                    //console.log(data);\n                                    cleaningGlobalValues();\n\n                                    var dataObj = JSON.stringify(data);\n                                    var dataJSON = JSON.parse(dataObj);\n                                    for (var i = 0; i < dataJSON.length; i++) {\n\n                                        groupID.push(dataJSON[i].id);\n                                        groupName.push(dataJSON[i].name);\n                                        groupPhoto.push(dataJSON[i].photo_200);\n\n\n                                        var place = dataJSON[i].place;\n                                        if (place) {\n                                            groupLatitude.push(dataJSON[i].place.latitude);\n                                            groupLongitude.push(dataJSON[i].place.longitude);\n                                        } else {\n                                            groupLatitude.push(0);\n                                            groupLongitude.push(0);\n                                        }\n\n                                        if (dataJSON[i].is_closed == 1) {\n                                            groupActivity.push(\"Данные недоступны\");\n                                            groupMembers.push(0);\n                                            groupStartdate.push(2001513200);\n                                        } else {\n                                            groupActivity.push(dataJSON[i].activity);\n                                            groupMembers.push(dataJSON[i].members_count);\n                                            groupStartdate.push(dataJSON[i].start_date);\n                                        }\n                                    }\n                                    console.log('Глобавльные переменные заполнены');\n\n                                    resolve(groupName);\n                                })\n                        })\n                    })\n                    .then(function (res) {\n                        //console.log(res); // запись в базу данных с API\n                        var Event = {\n                            id: String,\n                            name: String,\n                            activity: String,\n                            photo: String,\n                            start: Number,\n                            members: Number,\n                            latitude: Number,\n                            longitude: Number\n                        };\n                        console.log('Объект создан');\n                        for(var i = 0; i < groupID.length; i++) {\n                            Event[i] = {\n                                id: groupID[i],\n                                name: groupName[i],\n                                activity: groupActivity[i],\n                                photo: groupPhoto[i],\n                                start: groupStartdate[i],\n                                members: groupMembers[i],\n                                latitude: groupLatitude[i],\n                                longitude: groupLongitude[i]\n                            };\n                            var eventEx = Event[i];\n\n                            eventsArr.push(eventEx);\n                        }\n\n                        //eventsArr.sort(compareStart); // массив объектов отсортированный по дате старта\n\n                        // записать\n                        for (k=0; k<eventsArr.length; k++) {\n                            request.post({\n                                url: 'http://localhost:1337/events/'+CitiesID[c],\n                                form: {\n                                    id: eventsArr[k].id,\n                                    name: eventsArr[k].name,\n                                    activity: eventsArr[k].activity,\n                                    photo: eventsArr[k].photo,\n                                    start: eventsArr[k].start,\n                                    members: eventsArr[k].members,\n                                    latitude: eventsArr[k].latitude,\n                                    longitude: eventsArr[k].longitude\n                                }\n                            }, function (err, res, body) {\n                                if (err) {\n                                    console.log(err);\n                                } else if (body) {\n                                    console.log(body);\n                                }\n                            });\n                        }\n                    })\n            })\n            //})\n            .catch(error => console.error(error))\n    }\n}\n\n\nfunction RemoveDoubleRequest() {\n    setTimeout(function () {\n        db.get().collection('cityevents').find({}, {id:1}).sort({_id:1}).forEach(function(doc) {\n            db.get().collection('cityevents').remove({\n                _id:{$gt:doc._id},\n                id: doc.id\n            })\n        });\n\n    }, 1000)\n}\n\n\nfunction StartRecording() {\n    return new Promise(function (resolve, reject) {\n        cleaningGlobalValues();\n\n        for (var c = 0; c<CitiesID.length; c++) { // цикл для сбора данных по всем городам\n            cleaningGlobalValues();\n            if ((CitiesID[c] == 1) || (CitiesID[c] == 2)) {}\n            for (var j = 0; j<ABC.length; j++) { // цикл для сбора данных по всем поисковым словам\n                setTimeout(parseDataViaAPI(j,c), 5000*(j+1)); // Сбор, сортировка, запись\n            }\n\n            setTimeout(parseDataFromSite(c), 3500*(c+1)); // Сбор, сортировка, запись\n\n            if (c == CitiesID.length-1) { resolve(); }\n        }\n\n        resolve();\n    })\n}\n\n\n\nschedule.scheduleJob(rule, function(){\n    StartRecording()\n        .then(RemoveDoubleRequest)\n        .catch((error) => console.error(error))\n});\n\n\n\n\n// API methods\n\napp.get('/', function (req, res) {\n    res.send(\"OneTwoMeet.ru started!\");\n});\n\napp.get('/events', eventsController.all);\n\napp.get('/events/:id', eventsController.findById);\n\napp.post('/events/:cityid', eventsController.create);\n\n//app.put('/events/:id', eventsController.update);\n\n//app.delete('/events/:id', eventsController.delete);\n\napp.delete('events/remove', eventsController.deleteDouble);\n\n\ndb.connect(\"mongodb://localhost:27017/VK_eAPI\", function (err) { // VK_eAPI or test\n    if(err) { return console.log(err); }\n    app.listen(1337, function () {\n        console.log(\"API app started\");\n    });\n});"]}